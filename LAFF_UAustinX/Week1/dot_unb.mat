
% Copyright 2020 The University of Texas at Austin
%
% For licensing information see
%                http://www.cs.utexas.edu/users/flame/license.html 
%                                                                                 
% Programmed by: Kristina Ilyovska


function [ alpha_out ] = Dot_unb( alpha, x, y )
    % Slicing two vectors top to bottom an finding their dot product
    % x and y are vectors that are partitioned top to bottom, one element
    % of each exposed at a time. The exposed elements are multipled and
    % added to a scalar to compute the dot product of x and y
    % Function returns a scalar alpha

   [ xT, ...
    xB ] = FLA_Part_2x1( x, ...
                         0, 'FLA_TOP' );

  [ yT, ...
    yB ] = FLA_Part_2x1( y, ...
                         0, 'FLA_TOP' );

  alpha = 0;
  
  while ( size( xT, 1 ) < size( x, 1 ) )

    [ x0, ...
      chi1, ...
      x2 ] = FLA_Repart_2x1_to_3x1( xT, ...
                                    xB, ...
                                    1, 'FLA_BOTTOM' );

    [ y0, ...
      psi1, ...
      y2 ] = FLA_Repart_2x1_to_3x1( yT, ...
                                    yB, ...
                                    1, 'FLA_BOTTOM' );

    %------------------------------------------------------------%
    alpha = chi1 * psi1 + alpha;
    %------------------------------------------------------------%

    [ xT, ...
      xB ] = FLA_Cont_with_3x1_to_2x1( x0, ...
                                       chi1, ...
                                       x2, ...
                                       'FLA_TOP' );

    [ yT, ...
      yB ] = FLA_Cont_with_3x1_to_2x1( y0, ...
                                       psi1, ...
                                       y2, ...
                                       'FLA_TOP' );

  end

  alpha_out = alpha;


return
